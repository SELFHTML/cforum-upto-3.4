#!/usr/bin/perl -w

# {{{ initial comments
#
# $LastChangedDate$
# $LastChangedRevision$
# $LastChangedBy$
#
# }}}

# {{{ program header

#
use strict;
use vars qw($Bin $Script $Plugins $UserName $prefix $exec_prefix $Management $Forum);

BEGIN {
  my $null = $0; $null =~ tr!\\!/!; # for win :-(
  $Bin     = ($null =~ /^(.*)\/.*$/)? $1 : '.';
  $Script  = ($null =~ /^.*\/(.*)$/)? $1 : $null;

  # get needed environments
  die "Could not get config path, set CF_CONF_DIR!" unless $ENV{CF_CONF_DIR};
  die "Could not get forum name, set CF_FORUM_NAME!" unless $ENV{CF_FORUM_NAME};

  $Plugins = {};
  $UserName = '';
  $prefix  = "@prefix@";
  $exec_prefix = "@exec_prefix@";

  $Management = undef;
  $Forum = $ENV{CF_FORUM_NAME};
}

use lib "@libdir@/cforum";

sub VERSION {(q$Revision$ =~ /([\d.]+)\s*$/)[0] or '0.0'}

use CGI;
use CGI::Carp qw/fatalsToBrowser/;

use DBI;

use CForum::Template;
use CForum::Validator qw/is_valid_mailaddress/;

use File::Path;

use ForumUtils qw/read_configuration get_template get_error recode uniquify_params get_config_files get_user_config_file create_directory_structure fatal get_conf_val/;

use Net::SMTP;
# }}}

# {{{ show_register_form
sub show_register_form {
  my $cgi                    = shift;
  my $fo_default_conf        = shift;
  my $fo_usermanagement_conf = shift;
  my $user_config            = shift;
  my $err                    = shift;
  my $fatal_tpl = get_conf_val($fo_usermanagement_conf,$Forum,'FatalTemplate');
  my $reg_tpl = get_conf_val($fo_usermanagement_conf,$Forum,'Register');
  my $cs = get_conf_val($fo_default_conf,$Forum,'ExternCharset');

  fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_tpl) unless defined $reg_tpl;
  my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$reg_tpl));
  fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_tpl) unless defined $tpl;

  $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
  $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
  $tpl->setvalue('error',recode($fo_default_conf,$err)) if defined $err;
  $tpl->setvalue('charset',$cs);
  $tpl->setvalue('acceptcharset',$cs.', UTF-8');

  $tpl->setvalue($_,recode($fo_default_conf,$cgi->param($_))) foreach $cgi->param;

  print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
  exit;
}
# }}}

# {{{ validate parameters
sub validate_parameters {
  my $fdc = shift;
  my $cfg = shift;
  my $cgi = shift;

  foreach my $name ($cgi->param) {
    my $val = $cgi->param($name);

    if(exists $cfg->{$Forum}->{MinVal}) {
      my ($minval) = grep { $_->[0] eq $name } @{$cfg->{$Forum}->{MinVal}};
      return sprintf(get_error($fdc,$name,'short'),$minval->[1]) if defined $minval && $minval->[1] > $val;
    }

    if(exists $cfg->{$Forum}->{MaxVal}) {
      my ($maxval) = grep { $_->[0] eq $name } @{$cfg->{$Forum}->{MaxVal}};
      return sprintf(get_error($fdc,$name,'long'),$maxval->[1]) if defined $maxval && $maxval->[1] < $val;
    }

    if(exists $cfg->{$Forum}->{MinLength}) {
      my ($minlen) = grep { $_->[0] eq $name } @{$cfg->{$Forum}->{MinLength}};
      return sprintf(get_error($fdc,$name,'short'),$minlen->[1]) if defined $minlen && $minlen->[1] > length($val);
    }

    if(exists $cfg->{$Forum}->{MaxLength}) {
      my ($maxlen) = grep { $_->[0] eq $name } @{$cfg->{$Forum}->{MaxLength}};
      return sprintf(get_error($fdc,$name,'long'),$maxlen->[1]) if defined $maxlen && $maxlen->[1] < length($val);
    }

    if(exists $cfg->{$Forum}->{Validate}) {
      my @validate = grep { $_->[0] eq $name } @{$cfg->{$Forum}->{Validate}};

      foreach my $validate (@validate) {
        if($validate) {
          if($validate->[1] eq 'email') {
            return get_error($fdc,$name,'invalid') if is_valid_mailaddress($val) != 0;
          }
          else {
            return get_error($fdc,$name,'invalid') unless $val =~ m!$validate->[1]!;
          }
        }
      }
    }
  }

  return;
}
# }}}

my @fnames;
die 'error!' unless @fnames = get_config_files("fo_default","fo_usermanagement");

my $cgi = new CGI;
my $fo_default_conf        = read_configuration($fnames[0]) or die "error: $!";
my $fo_usermanagement_conf = read_configuration($fnames[1]) or die "error: $!";
my $user_config            = {};

# {{{ load plugins and authenticate
foreach(@{$fo_usermanagement_conf->{global}->{AddModule}}) {
  eval "use $_->[0];";
  fatal($cgi,$fo_default_conf,$user_config,sprintf(get_error($fo_default_conf,'PLUGIN_ERR'),"$@"),get_conf_val($fo_usermanagement_conf,$Forum,'FatalTemplate')) if $@;
}

foreach(@{$Plugins->{auth}}) {
  last if &$_($fo_default_conf,$fo_usermanagement_conf);
}
# }}}

# {{{ Load management engine
eval "use ".$fo_usermanagement_conf->{$main::Forum}->{ManagementEngine}->[0]->[0] if $fo_usermanagement_conf->{$main::Forum}->{ManagementEngine};
die $@ if $@;
# }}}

my $fatal_template = get_conf_val($fo_usermanagement_conf,$Forum,'FatalTemplate');
my $cs = get_conf_val($fo_default_conf,$Forum,'ExternCharset');

my $umask = get_conf_val($fo_usermanagement_conf,$Forum,'Umask');
umask oct($umask) if $umask;

my $action           = $cgi->param('a') || 'view';

if($cgi->param('cs')) {
  my $err = uniquify_params($fo_default_conf,$cgi,'cs');
  fatal($cgi,$fo_default_conf,$user_config,$err,$fatal_template) if $err;
}

if($UserName) {
  my $cfile = get_user_config_file($fo_default_conf,$UserName);
  $user_config = read_configuration($cfile) or die $!;
}
else {
  $action = '' unless $action eq 'register' || $action eq 'sendpw';
}

# {{{ validate action
# hehe, I *love* perl for statements like this ;)
my %am = map { ($_,1) } split /,/,get_conf_val($fo_usermanagement_conf,$Forum,'ActivateModules');

if($action eq 'unreg' || $action eq 'unregok') {
  $action = 'redirect' unless $am{unregister};
}
elsif($action eq 'changepw') {
  $action = 'redirect' unless $am{changepw};
}
elsif($action eq 'sendpw') {
  $action = 'redirect' unless $am{sendpw};
}
elsif($action eq 'register' || !$action) {
  $action = 'redirect' unless $am{register};
}
# }}}

# action is not activated (or registered), give error
if($action eq 'redirect') {
  fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'E_dontknow'),$fatal_template);
}

if($UserName) {
  # {{{ unregister account
  if($action eq 'unreg') {
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined get_conf_val($fo_usermanagement_conf,$Forum,'Unregister');
    my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,get_conf_val($fo_usermanagement_conf,$Forum,'Unregister')));
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined($tpl);
    $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
    $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
    $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
    $tpl->setvalue('charset',$cs);
    $tpl->setvalue('acceptcharset',$cs.', UTF-8');

    print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
  }
  # }}}
  # {{{ unregister is ok
  elsif($action eq 'unregok') {
    #
    # run config plugins
    #
    foreach(@{$Plugins->{unregister}}) {
      &$_($fo_default_conf,$fo_usermanagement_conf,$user_config);
    }

    my $cfile = get_user_config_file($fo_default_conf,$UserName);
    my $dir   = $cfile;
    $dir =~ s!\.conf$!!; #!;

    rmtree($dir) or die $!;
    unlink($cfile) or die $!;

    my $err = undef;
    $err = $Management->remove_user($fo_default_conf,$fo_usermanagement_conf,$UserName) if $Management;
    fatal($cgi,$fo_default_conf,$user_config,$err,$fatal_template) if $err;

    my $val = get_conf_val($fo_usermanagement_conf,$Forum,'UnregisterOk');
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $val;
    my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$val));
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $tpl;
    $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
    $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
    $tpl->setvalue('charset',$cs);
    $tpl->setvalue('acceptcharset',$cs.', UTF-8');

    print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
  }
  # }}}
  # {{{ change password
  elsif($action eq 'changepw') {
    my $form = 1;
    my $err  = undef;

    if($cgi->param('Password') && $cgi->param('Password1')) {
      my $p = $cgi->param('Password');

      if($p eq $cgi->param('Password1')) {
        $form = 0;
        $form = 1 if $err = validate_parameters($fo_default_conf,$fo_usermanagement_conf,$cgi);

        unless($form) {
          $err = undef;
          $err = $Management->change_pass($fo_default_conf,$fo_usermanagement_conf,$UserName,$p) if $Management;
          fatal($cgi,$fo_default_conf,$user_config,$err,$fatal_template) if $err;
        }
      }
      else {
        $err = get_error($fo_default_conf,'pass','match');
      }
    }

    if($form) {
      my $chpass = get_conf_val($fo_usermanagement_conf,$Forum,'ChangePass');
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $chpass;
      my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$chpass));
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $tpl;

      $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
      $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
      $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
      $tpl->setvalue('error',recode($fo_default_conf,$err)) if $err;
      $tpl->setvalue('charset',$cs);
      $tpl->setvalue('acceptcharset',$cs.', UTF-8');

      print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
    }
    else {
      my $chpassok = get_conf_val($fo_usermanagement_conf,$Forum,'ChangePassOk');
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $chpassok;
      my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$chpassok));
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $tpl;

      $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
      $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
      $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
      $tpl->setvalue('charset',$cs);
      $tpl->setvalue('acceptcharset',$cs.', UTF-8');

      print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
    }
  }
  # }}}
  # {{{ change email
  elsif($action eq 'changemail') {
    my $form = 1;
    my $err  = undef;

    if($cgi->param('email')) {
      my $mail = $cgi->param('email');

      $form = 0;

      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'E_EMail_invalid'),$fatal_template) if is_valid_mailaddress($mail) != 0;
      $err = $Management->change_email($fo_default_conf,$fo_usermanagement_conf,$UserName,$mail) if $Management;
      fatal($cgi,$fo_default_conf,$user_config,$err,$fatal_template) if $err;
    }

    if($form) {
      my $chmail = get_conf_val($fo_usermanagement_conf,$Forum,'ChangeMail');
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $chmail;
      my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$chmail));
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $tpl;

      $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
      $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
      $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
      $tpl->setvalue('charset',$cs);
      $tpl->setvalue('acceptcharset',$cs.', UTF-8');

      print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;

    }
    else {
      my $chmailok = get_conf_val($fo_usermanagement_conf,$Forum,'ChangeMailOk');
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $chmailok;
      my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$chmailok));
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless $tpl;

      $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
      $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
      $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
      $tpl->setvalue('charset',$cs);
      $tpl->setvalue('acceptcharset',$cs.', UTF-8');

      print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
    }
  }
  # }}}
  else {
    # no action given
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'E_dontknow'),$fatal_template);
  }
}
else {
  # {{{ register user
  if($action eq 'register') {
    my ($user,$passwd,$passwd1,$email) = ($cgi->param('UserName'),$cgi->param('Password'),$cgi->param('Password1'),$cgi->param('email'));

    if(my $err = validate_parameters($fo_default_conf,$fo_usermanagement_conf,$cgi)) {
      show_register_form(
        $cgi,
        $fo_default_conf,
        $fo_usermanagement_conf,
        $user_config,
        $err
      );
    }

    if($passwd ne $passwd1) {
      show_register_form(
        $cgi,
        $fo_default_conf,
        $fo_usermanagement_conf,
        $user_config,
        get_error($fo_default_conf,'pass','match')
      );
    }

    my $ufile = get_user_config_file($fo_default_conf,$user);
    if(-f $ufile) {
      show_register_form(
        $cgi,
        $fo_default_conf,
        $fo_usermanagement_conf,
        $user_config,
        get_error($fo_default_conf,'uname','exists')
      );
      exit;
    }

    if(!create_directory_structure($fo_default_conf,$user)) {
      show_register_form(
        $cgi,
        $fo_default_conf,
        $fo_usermanagement_conf,
        $user_config,
        get_error($fo_default_conf,'user','create')
      );
      exit;
    }

    my $dir = $ufile;
    $dir =~ s!\.conf$!!; #!;

    mkdir $dir,0771 or die $!;

    my $dat;
    open $dat,'>'.$ufile or die $!;

    #
    # run config plugins
    #
    foreach(@{$Plugins->{register}}) {
      &$_($fo_default_conf,$fo_usermanagement_conf,$user_config,$dir,$ufile,$dat);
    }

    close $dat;

    my $err = undef;
    $err = $Management->add_user($fo_default_conf,$fo_usermanagement_conf,$user,$passwd,$email) if $Management;
    if($err) {
      rmtree($dir) or die $!;
      unlink($ufile) or die $!;
      fatal($cgi,$fo_default_conf,$user_config,$err,$fatal_template);
    }

    my $regok = get_conf_val($fo_usermanagement_conf,$Forum,'RegisterOk');
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $regok;
    my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$regok));
    fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $tpl;

    $tpl->setvalue('ubase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
    $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
    $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
    $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
    $tpl->setvalue('uscript',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserManagement')));
    $tpl->setvalue('charset',$cs);
    $tpl->setvalue('acceptcharset',$cs.', UTF-8');

    print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
  }
  # }}}
  # {{{ send password
  elsif($action eq 'sendpw') {
    if($cgi->param('uname') || $cgi->param('email')) {
      my $username = $cgi->param('uname');
      my $f_email  = $cgi->param('email');
      my $result = undef;
      if($Management) {
        if($username) {
          $result = $Management->get_password_by_username($fo_default_conf,$fo_usermanagement_conf,$username);
        }
        else {
          $result = $Management->get_password_by_mail($fo_default_conf,$fo_usermanagement_conf,$f_email);
        }
      }

      if(ref($result) eq "HASH") {
        # send mail
        my $body = get_error($fo_default_conf,'sendpw','body');
        $body =~ s!\{\$pass\}!$result->{pass}!g;
        $body =~ s!\{\$email\}!$result->{email}!g;
        $body =~ s!\{\$user\}!$result->{uname}!g;

        my $smtp = new Net::SMTP(get_conf_val($fo_usermanagement_conf,$Forum,'SMTPHost'));
        my $from = get_conf_val($fo_usermanagement_conf,$Forum,'SMTPFrom');

        fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'SMTP_failed'),$fatal_template) unless $smtp;
        $smtp->mail($from);
        $smtp->to($result->{email});
        $smtp->data();
        $smtp->datasend('From: '.$from."\n");
        $smtp->datasend('To: '.$result->{email}."\n");
        $smtp->datasend('Subject: '.get_error($fo_default_conf,'sendpw','subject')."\n\n");
        $smtp->datasend($body);
        $smtp->dataend();
        $smtp->quit();

        # send user output
        my $sendpassok = get_conf_val($fo_usermanagement_conf,$Forum,'SendPassOk');
        fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $sendpassok;
        my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$sendpassok));
        fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $tpl;
        $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
        $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
        $tpl->setvalue('charset',$cs);
        $tpl->setvalue('acceptcharset',$cs.', UTF-8');

        print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
      }
      else {
        my $errtpl = get_conf_val($fo_usermanagement_conf,$Forum,'FatalTemplate');
        fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $errtpl;
        my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$errtpl));
        fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless  defined $tpl;

        $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
        $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
        $tpl->setvalue('charset',$cs);

        if($result) {
          $tpl->setvalue('err',$result);
        }
        else {
          $tpl->setvalue('err',get_error($fo_default_conf,'sendpw','error'));
        }

        print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
      }
    }
    else {
      my $sendpass = get_conf_val($fo_usermanagement_conf,$Forum,'SendPass');
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $sendpass;
      my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,$sendpass));
      fatal($cgi,$fo_default_conf,$user_config,get_error($fo_default_conf,'TPL_NOT_FOUND'),$fatal_template) unless defined $tpl;

      $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserRegister')));
      $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'BaseURL')));
      $tpl->setvalue('charset',$cs);
      $tpl->setvalue('acceptcharset',$cs.', UTF-8');

      print $cgi->header(-type => 'text/html; charset='.$cs),$tpl->parseToMem;
    }
  }
  # }}}
  # {{{ show register form
  else {
    show_register_form($cgi,$fo_default_conf,$fo_usermanagement_conf,$user_config);
  }
  # }}}
}

# eof

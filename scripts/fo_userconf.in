#!/usr/bin/perl -w

# {{{ initial comments
#
# $LastChangedDate$
# $LastChangedRevision$
# $LastChangedBy$
#
# }}}

# {{{ program header

#
use strict;
use vars qw($Bin $Script $Plugins $UserName $exec_prefix $prefix $Forum);

BEGIN {
  my $null = $0; $null =~ tr!\\!/!; # for win :-(
  $Bin     = ($null =~ /^(.*)\/.*$/)? $1 : '.';
  $Script  = ($null =~ /^.*\/(.*)$/)? $1 : $null;

  # get needed environments
  die "Could not get config path, set CF_CONF_DIR!" unless $ENV{CF_CONF_DIR};
  die "Could not get forum name, set CF_FORUM_NAME!" unless $ENV{CF_FORUM_NAME};

  $Plugins = {};
  $UserName = '';
  $prefix  = "@prefix@";
  $exec_prefix = "@exec_prefix@";

  $Forum = $ENV{CF_FORUM_NAME};
}

use lib "@libdir@/cforum";

sub VERSION {(q$Revision$ =~ /([\d.]+)\s*$/)[0] or '0.0'}

use CGI;
use CGI::Carp qw/fatalsToBrowser/;

use DBI;

use XML::GDOME;

use HTML::Entities;
use CForum::Template;

use POSIX qw/mktime/;
use File::Path;

use ForumUtils qw(
  read_configuration
  get_node_data
  get_template
  get_error recode
  uniquify_params
  get_config_files
  get_user_config_file
  create_directory_structure
  get_conf_val
  fatal
  is_admin
);

use CForum::Validator qw/is_valid_http_link is_valid_link is_valid_mailaddress/;

# }}}

# {{{ generate_edit_output
sub generate_edit_output {
  my ($cgi,$fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config,$source,$save,$err) = @_;
  my $tpl = new CForum::Template(get_template($fo_default_conf,$user_config,get_conf_val($fo_userconf_conf,$Forum,'Edit'))) or die $@;

  foreach my $modconf (@{$fo_userconf_conf->{$Forum}->{ModuleConfig}}) {
    my $doc   = XML::GDOME->createDocFromURI(sprintf($modconf->[0],get_conf_val($fo_default_conf,$Forum,'Language'))) or die $!;
    my @nodes = $doc->findnodes('/config/*');

    foreach my $directive (@nodes) {
      my $dname     = $directive->getAttribute('name');
      my @arguments = $directive->getElementsByTagName('argument');
      my $i         = 0;

      foreach my $arg (@arguments) {
        my $pname = $arg->getAttribute('paramname');
        my $val;
        # {{{ get value from correct source
        if($source) {
          if($source eq 'cgi') {
            $val = join ',',$cgi->param($pname) if $cgi->param($pname);
          }
          else {
            $val = $user_config->{global}->{$dname}->[0]->[$i++];
          }
        }
        else {
          $val = $user_config->{global}->{$dname}->[0]->[$i++];
          $val = join ',',$cgi->param($pname) if $cgi->param($pname);
        }
        # }}}

        next if !defined($val) || !length($val);

        if($arg->getAttribute('parse') eq 'date') {
          my ($sec,$min,$hour,$day,$mon,$year) = localtime $val;

          $mon  += 1;
          $year += 1900;

          $val = sprintf('%02d. %02d. %4d %02d:%02d:%02d',$day,$mon,$year,$hour,$min,$sec);
        }
        else {
          $val =~ s/\"/"/g;
          if($fo_default_conf->{$Forum}->{XHTMLMode} eq 'yes') {
            $val =~ s!\\n!<br />\n!g;
          }
          else {
            $val =~ s!\\n!<br>\n!g;
          }
        }

        $tpl->setvalue($pname,recode($fo_default_conf,$val||''));
      }
    }
  }

  my $is_admin         = is_admin($fo_default_conf,$UserName) || 0;

  my $categories = new CForum::Template::t_cf_tpl_variable($CForum::Template::TPL_VARIABLE_ARRAY);
  my @cats = get_conf_val($fo_default_conf,$Forum,'Categories');

  $categories->addvalue($_) foreach @cats;

  $tpl->setvar('categories',$categories);
  $tpl->setvalue('err',$err) if $err;
  $tpl->setvalue('save','yes') if $save;
  $tpl->setvalue('is_admin','yes') if $is_admin;
  $tpl->setvalue('forumbase',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UBaseURL')));
  $tpl->setvalue('userconfig',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
  $tpl->setvalue('script',recode($fo_default_conf,get_conf_val($fo_default_conf,$Forum,'UserConfig')));
  $tpl->setvalue('usermanagement',get_conf_val($fo_default_conf,$Forum,'UserManagement'));
  $tpl->setvalue('charset',get_conf_val($fo_default_conf,$Forum,'ExternCharset'));

  #
  # display plugins
  #
  foreach(@{$Plugins->{display}}) {
    &$_($fo_default_conf,$fo_userconf_conf,$user_config,$cgi,$tpl);
  }

  print $cgi->header(-type => 'text/html; charset='.get_conf_val($fo_default_conf,$Forum,'ExternCharset')),$tpl->parseToMem;
}
# }}}

my @fnames;
die "could not get config files" unless @fnames = get_config_files("fo_default","fo_view","fo_userconf");

my $fo_default_conf  = read_configuration($fnames[0]) or die $!;
my $fo_view_conf     = read_configuration($fnames[1]) or die $!;
my $fo_userconf_conf = read_configuration($fnames[2]) or die $!;
my $user_config      = {};

my $cgi              = new CGI;
my $action           = $cgi->param('a') || 'view';

# {{{ load plugins and authenticate
foreach(@{$fo_userconf_conf->{global}->{AddModule}}) {
  eval "use $_->[0];";
  fatal($cgi,$fo_default_conf,$user_config,sprintf(get_error($fo_default_conf,'PLUGIN_ERR'),"$@"),get_conf_val($fo_default_conf,$Forum,'ErrorTemplate')) if $@;
}

foreach(@{$Plugins->{auth}}) {
  last if &$_($fo_default_conf,$fo_view_conf,$fo_userconf_conf);
}
# }}}

if($cgi->param('cs')) {
  my $err = uniquify_params($fo_default_conf,$cgi,'cs');
  fatal($cgi,$fo_default_conf,$user_config,recode($fo_default_conf,$err),get_conf_val($fo_default_conf,$Forum,'ErrorTemplate')) if $err;
}

# {{{ read user configuration
if($UserName) {
  my $cfile = get_user_config_file($fo_default_conf,$UserName);
  $user_config = read_configuration($cfile) or die $!;
}
else {
  print $cgi->redirect($fo_default_conf->{$Forum}->{UserRegister}->[0]->[0]);
  exit;
}
# }}}

# {{{ you should not do this, it's really bad
if(my $val = get_conf_val($user_config,'global','TPLMode')) {
  $fo_default_conf->{$Forum}->{XHTMLMode} = ($val =~ /xhtml/i) ? 'yes' : 'no';
}
else {
  $fo_default_conf->{$Forum}->{XHTMLMode} = 'no';
}
# }}}

# {{{ save user configuration
if($action eq 'save') {
  # {{{ merge config
  my $own_ucfg = merge_config($fo_default_conf,$fo_userconf_conf,$user_config,$cgi);

  if(!$own_ucfg || !ref($own_ucfg)) {
    generate_edit_output($cgi,$fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config,'cgi',undef,$own_ucfg);
    exit;
  }
  # }}}

  # {{{ run config plugins
  foreach(@{$Plugins->{writeconf}}) {
    &$_($fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config,$own_ucfg,$cgi);
  }
  # }}}

  # {{{ all checks are ok, lets write the config file
  my $cfile = get_user_config_file($fo_default_conf,$UserName);
  if(my $ret = write_userconf($fo_default_conf,$cfile,$own_ucfg)) {
    fatal($cgi,$fo_default_conf,$user_config,$ret,get_conf_val($fo_default_conf,$Forum,'ErrorTemplate'));
  }
  # }}}

  generate_edit_output($cgi,$fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config,'cgi','yes');
}
# }}}
# {{{ show options
else {
  if($action && $Plugins->{$action}) {
    &{$Plugins->{$action}}($fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config,$cgi);
  }
  else {
    generate_edit_output($cgi,$fo_default_conf,$fo_view_conf,$fo_userconf_conf,$user_config);
  }
}
# }}}

# eof
